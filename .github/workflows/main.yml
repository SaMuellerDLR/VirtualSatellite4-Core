name: Build

# Run this workflow every time a new commit pushed to your repository
on: push

jobs:
  verify:
    name: Verify
    runs-on: ubuntu-16.04
    
    steps:
      # Checks out a copy of your repository
      - name: Checkout code
        uses: actions/checkout@v2
        
      # --------------------------------------------
      # Run a quicksanity check if all commits are
      # handed in by known users
      #---------------------------------------------
      - name: Verify - Authors Sanity Check
        run: ./bash/verify_commit_authors.sh known_authors.txt

  spotbugs:
    # Name the Job
    name: Spotbugs
    # Set the type of machine to run on
    runs-on: ubuntu-16.04
    needs: [verify]

    steps:
       # Checks out a copy of the repository
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-local-maven-spotbugs-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-local-maven-   
            
      - name: Setup
        run: ./bash/setup.sh
        
      - name: Build and Test - SpotBugs - Development and Features
        run: ./bash/maven_build.sh -j spotbugs -p development
        if: ${{ !contains(github.ref, 'integration') 
             && !contains(github.ref, 'integration_snapshot') 
             && !contains(github.ref, 'development_snapshot') 
             && !contains(github.ref, 'master') 
             && !contains(github.ref, 'Release') }}
        
      - name: Build and Test - SpotBugs - Integration
        run: ./bash/maven_build.sh -j spotbugs -p integration
        if: ${{ github.ref == 'refs/heads/integration'  }}
        
      - name: Build and Test - SpotBugs - Release
        run: ./bash/maven_build.sh -j spotbugs -p release
        if: ${{ contains(github.ref, 'master') || (contains(github.ref, 'refs/tags/') && contains(github.ref, 'Release'))  }}
        
  surefire:
    # Name the Job
    name: Surefire
    # Set the type of machine to run on
    runs-on: ubuntu-16.04
    needs: [verify]

    steps:
       # Checks out a copy of your repository
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-local-maven-surefire-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-local-maven-   
        
      - name: Setup
        run: ./bash/setup.sh
        
      - name: Build and Test - Surefire - Development and Features
        run: ./bash/maven_build.sh -j surecoverage -p development
        if: ${{ !contains(github.ref, 'integration') 
             && !contains(github.ref, 'integration_snapshot') 
             && !contains(github.ref, 'development_snapshot') 
             && !contains(github.ref, 'master') 
             && !contains(github.ref, 'Release') }}
      
      - name: Build and Test - Surefire - Integration
        run: ./bash/maven_build.sh -j surecoverage -p integration
        if: ${{ github.ref == 'refs/heads/integration'  }}
        
      - name: Build and Test - Surefire - Release
        run: ./bash/maven_build.sh -j surecoverage -p release
        if: ${{ contains(github.ref, 'master') || (contains(github.ref, 'refs/tags/') && contains(github.ref, 'Release'))  }}
      
  checkstyle:
    # Name the Job
    name: Checkstyle
    # Set the type of machine to run on
    runs-on: ubuntu-16.04
    needs: [verify]

    steps:
       # Checks out a copy of your repository
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-local-maven-checkstyle-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-local-maven-
            
      - name: Setup
        run: ./bash/setup.sh
        
      - name: Build and Test - Checkstyle - Development and Features
        run: ./bash/maven_build.sh -j checkstyle -p development
        if: ${{ !contains(github.ref, 'integration') 
             && !contains(github.ref, 'integration_snapshot') 
             && !contains(github.ref, 'development_snapshot') 
             && !contains(github.ref, 'master') 
             && !contains(github.ref, 'Release') }}
        
      - name: Build and Test - Checkstyle - Integration
        run: ./bash/maven_build.sh -j checkstyle -p integration
        if: ${{ github.ref == 'refs/heads/integration'  }}
        
      - name: Build and Test - Checkstyle - Release
        run: ./bash/maven_build.sh -j checkstyle -p release
        if: ${{ contains(github.ref, 'master') || (contains(github.ref, 'refs/tags/') && contains(github.ref, 'Release'))  }}
        
  deploy:
    # Name the Job
    name: Deploy
    # Set the type of machine to run on
    runs-on: ubuntu-16.04
    needs: [spotbugs, surefire, checkstyle]
    
    steps:
       # Checks out a copy of the repository
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Setup
        run: ./bash/setup.sh
        
      - name: Build
        run: ./bash/maven_build.sh -j assemble -p development
        
      - name: Create Tag
        run: |
         git tag -f development_snapshot
         git remote add github-mtd  https://${GITHUB_API_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git
         git push -f github-mtd development_snapshot
         git remote remove github-mtd
         
      - name: Deploy
        uses: svenstaro/upload-release-action@v2
        with:
         repo_token: ${{ secrets.GITHUB_TOKEN }}
         file: deploy/unsecured/bin/**/*.zip
         tag: development_snapshot
         overwrite: true
         body: "This is my release text"
